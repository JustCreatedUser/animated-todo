window.addEventListener("resize",()=>{rotationMultiplier=window.innerWidth>800?0.4:0.8});let rotationMultiplier=window.innerWidth>800?0.5:1;class ElementTransformStyles{constructor(element){this.x=new ElementTransformCoordinates("--x-rotation",element);this.y=new ElementTransformCoordinates("--y-rotation",element)}
rotate(axis,animationOptions){this[axis].val=animationOptions.currentCount}}
class ElementTransformCoordinates{constructor(cssName,element){this.cssName=cssName;this.currentValue=0;this.initialValue=0;this.element=element}
get val(){return this.currentValue}
set val(value){let multiplier=1;if(this.cssName[2]==="x")multiplier=-1;let experiment=(()=>{switch(this.cssName[2]){case "x":return"y";case "y":return"x"}})();this.currentValue=Math.round((this.initialValue+(value-mouseDragStartPositions[experiment])*multiplier*rotationMultiplier)*100)/100;this.element.style.setProperty(this.cssName,this.currentValue+"deg")}}
export const mouseDragStartPositions={x:0,y:0,};export default function setup3DElement(elementContainer,element){let isEventFiring=!1;const elementRotationStyles=new ElementTransformStyles(element);const events=(()=>{if(window.navigator.userAgent.includes("Mobile"))
return["touchstart","touchmove","touchend"];return["mousedown","mousemove","mouseup"]})();function setMouseCoordsByEvent(event){mouseDragStartPositions.x=event.clientX;mouseDragStartPositions.y=event.clientY}
function ROTATE(event){elementRotationStyles.rotate("x",{startCount:mouseDragStartPositions.y,currentCount:event.clientY,})}
elementContainer.addEventListener(events[1],(event)=>{if(!isEventFiring)return;let correctEventInfo=event;if(events[1]==="touchmove")correctEventInfo=event.targetTouches[0];ROTATE(correctEventInfo)});elementContainer.addEventListener(events[0],(event)=>{if(event.target.classList[0]!==elementContainer.classList[0])return;let correctEventInfo=event;isEventFiring=!0;if(events[0]==="touchstart")correctEventInfo=event.targetTouches[0];setMouseCoordsByEvent(correctEventInfo)});elementContainer.addEventListener(events[2],(event)=>{let correctEventInfo=event;isEventFiring=!1;if(events[2]==="touchend")correctEventInfo=event.changedTouches[0];setMouseCoordsByEvent(correctEventInfo);elementRotationStyles.x.initialValue=elementRotationStyles.x.currentValue;elementRotationStyles.y.initialValue=elementRotationStyles.y.currentValue});return elementRotationStyles}